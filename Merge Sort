link = https://practice.geeksforgeeks.org/problems/merge-sort/1

 public:
    void merge(int arr[], int l, int m, int r)
    {
        int l1 = m-l+1;
        int l2 = r-m;
        
        int *first = new int[l1];
        int *second = new int[l2];
        int k=l;
        for(int i=0;i<l1;i++){
            first[i] = arr[k++];
        }
        k = m+1;
        for(int i=0;i<l2;i++){
            second[i] = arr[k++];
        }
        int i=0,j=0;
        k = l;
       while(i<l1 && j<l2){
           if(first[i]<second[j]){
               arr[k++]=first[i++];
           }
           else{
               arr[k++]=second[j++];
           }
       }
       while(i<l1){
               arr[k++] = first[i++];
           }
        while(j<l2){
               arr[k++] = second[j++];
           }
       
         // Your code here
    }
    public:
    void mergeSort(int arr[], int l, int r)
    {
         if(l>=r){
            return;
        }
        
        int mid = l + (r-l)/2;
        
       mergeSort(arr, l,  mid);
       
       mergeSort(arr, mid+1, r);
       
       merge(arr,l,mid,r);
        //code here
    }
