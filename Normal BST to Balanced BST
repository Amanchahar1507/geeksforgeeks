

void inorder(Node*root,vector<int>&ans){
    if(root == NULL) return;
    
    inorder(root->left,ans);
    ans.push_back(root->data);
    inorder(root->right,ans);
}

Node* inorderToBST(int s, int e, vector<int>&ans){
    if(s>e) return NULL;
    int mid = s+(e-s)/2;
    Node*root = new Node(ans[mid]);
    
    root->left = inorderToBST(s,mid-1,ans);
    root->right = inorderToBST(mid+1,e,ans);
    
    return root;
}

Node* buildBalancedTree(Node* root)
{
    vector<int>ans;
    inorder(root,ans);
    int n= ans.size();
    int s =0;
    int e = n-1;
    
    return inorderToBST(s,e,ans);
}
