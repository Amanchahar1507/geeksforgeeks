link = https://practice.geeksforgeeks.org/problems/given-a-linked-list-of-0s-1s-and-2s-sort-it/1

class Solution
{
    public:
    //Function to sort a linked list of 0s, 1s and 2s.
    Node* segregate(Node *head) {
        
       int countZero = 0;
       int countOne = 0;
       int countTwo = 0;
       
       Node*curr = head;
       while(curr!=NULL){
           if(curr->data == 0)
               countZero++;
           else if(curr->data == 1)
               countOne++;
           else if(curr->data == 2)
               countTwo++;
           curr = curr->next;
       }
       curr = head;
       while(curr!=NULL){
           if(countZero !=0){
               curr->data = 0;
               countZero--;
           }
          else if(countOne !=0){
               curr->data = 1;
               countOne--;
           }
           else if(countTwo !=0){
               curr->data = 2;
               countTwo--;
           }
           curr = curr->next;
       }
       return head;
        // Add code here
        
    }
};
