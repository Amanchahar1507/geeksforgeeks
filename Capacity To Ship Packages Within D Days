class Solution {
  public:
  
    int isvalid(int arr[], int N, int D, int mid){
        int days = 1;
        int weights = 0;
        for(int i=0;i<N;i++){
            if(weights + arr[i]<=mid){
                weights += arr[i];
            }
            else{
                days++;
                if(days>D || arr[i]>mid){
                    return false;
                }
                else{
                    weights  = arr[i];
                }
            }
        }
        return true;
    }
  
    int leastWeightCapacity(int arr[], int N, int D) {
       int s =0;
       int sum = 0;
       for(int i=0;i<N;i++){
           sum = sum + arr[i];
       }
       int e = sum;
       int mid;
       int ans = -1;
       while(s<=e){
           mid= s + (e-s)/2;
           if(isvalid(arr,N,D,mid)){
               ans = mid;
               e = mid -1;
               
           }
           else{
               s = mid + 1;
           }
           
       }
       return ans;
        // code here
    }
    
};
