link = https://practice.geeksforgeeks.org/problems/construct-tree-1/1

class Solution{
    public:
    
    int FindPosition(int in[], int n, int element ){
        for(int i=0;i<n;i++){
            if(element == in[i]){
                return i;
            }
        }
        return -1;
    }
    
    Node*solve(int in[], int pre[], int n, int &index, int start, int end){
        if(index>=n || end<start){
            return NULL;
        }
        
        int element = pre[index++];
        Node*root = new Node(element);
        int position = FindPosition(in, n,element);
        
        root->left = solve(in,pre, n , index, start,position-1);
        root->right = solve(in,pre, n, index, position+1,end);
        
        return root;
    }
    
    Node* buildTree(int in[],int pre[], int n)
    {
        int preOrderIndex = 0;
        Node*ans =  solve(in,pre,n,preOrderIndex,0,n-1);
        return ans;
    }
};
