link = https://practice.geeksforgeeks.org/problems/sum-tree/1

class Solution
{
    public:
    
    pair<bool,int>sumtree(Node* root){
        
        if(root ==NULL){
            pair<bool,int>p = make_pair(true,0);
            return p;
        }
        if(root->left == NULL && root->right == NULL){
            pair<bool,int>p = make_pair(true,root->data);
            return p;
        }
        
        pair<int,int>left = sumtree(root->left);
        pair<int,int>right = sumtree(root->right);
        
        bool leftAns = left.first;
        bool rightAns = right.first;
        
        bool curr_node = root->data == left.second + right.second;
        
        pair<bool,int>ans;
         
        if(leftAns && rightAns && curr_node){
             ans.first =true;
             ans.second = root->data +left.second + right.second;
        }
        else{
             ans.first = false;
        }
        return ans;
    }
    
    bool isSumTree(Node* root)
    {
        return sumtree(root).first;
    }
};
