link = https://practice.geeksforgeeks.org/problems/boundary-traversal-of-binary-tree/1

class Solution {
public:

    void Lefttree(Node*root , vector<int>&ans){
        if(root == NULL || (root->left == NULL && root->right == NULL)){
            return;
        }
        
        ans.push_back(root->data);
        
        if(root->left){
            Lefttree(root->left,ans);
        }
        else{
            Lefttree(root->right,ans);
        }
    }
    
    void Leaf(Node* root, vector<int> &ans){
        if(root == NULL) return;
        
        if(root->left) Leaf(root->left, ans);
        if(root->left == NULL && root->right == NULL){
            ans.push_back(root->data);
        }
        if(root->right) Leaf(root->right, ans);
    }
    
    void Righttree(Node*root , vector<int>&ans){
        if(root == NULL || (root->left == NULL && root->right == NULL)){
            return;
        }
        
        if(root->right){
            Righttree(root->right,ans);
        }
        else {
            Righttree(root->left,ans);
        }
        ans.push_back(root->data);
    }

    vector <int> boundary(Node *root)
    {
      vector<int>ans;
      if(root == NULL){
          return ans;
      }
      if( root->left==NULL && root->right==NULL){
             ans.push_back(root->data);
             return ans;
         }
       
      ans.push_back(root->data);
       
      Lefttree(root->left, ans);
       
      Leaf(root ,ans);
    //   Leaf(root->right,ans);
       
      Righttree(root->right,ans);
       
      return ans;
    }
    

};
