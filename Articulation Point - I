link = https://practice.geeksforgeeks.org/problems/articulation-point-1/1

class Solution {
  public:
  
    void dfs(int node, int parent, int &timer, vector<int>&visited, vector<int>&isarti, vector<int>adj[],
    vector<int>&low,vector<int>&tin){
        visited[node] =1;
        
        tin[node] = low[node] = timer++;
        
        int child = 0;
        for(auto it: adj[node]){
            if(it==parent) continue;
            
            if(!visited[it]){
                dfs(it,node,timer,visited,isarti,adj,low,tin);
                low[node] = min(low[node],low[it]);
                
                if(low[it]>=tin[node] && parent!=-1){
                    isarti[node] = 1;
                }
                child++;
            }
            else{
                low[node]  =min(low[node],tin[it]);
            }
        }
        if(parent==-1 && child>1)
            isarti[node] =1;
    }
  
    vector<int> articulationPoints(int V, vector<int>adj[]) {
        vector<int>isarti(V,0);
        vector<int>visited(V,0);
        vector<int>low(V,-1);
        vector<int>tin(V,-1);
        vector<int>ans;
        
        int timer = 0;
        
        for(int i=0;i<V;i++){
            if(!visited[i]){
                dfs(i,-1,timer,visited,isarti,adj,low,tin);
            }
        }
        for(int i=0;i<V;i++){
            if(isarti[i]) ans.push_back(i);
        }
        
        if(ans.size()==0) 
            ans.push_back(-1);
            
        return ans;
    }
};
