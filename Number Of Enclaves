link = https://practice.geeksforgeeks.org/problems/number-of-enclaves/1

class Solution {
  public:
    int numberOfEnclaves(vector<vector<int>> &grid) {
        int n = grid.size();
        int m = grid[0].size();
        
        int visited[n][m] ={0};
        
        queue<pair<int,int>>q;
        
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(i==0 || i==n-1 || j==0 || j==m-1){
                    if(grid[i][j]==1){
                        visited[i][j] =1;
                        q.push({i,j});
                    }
                }
            }
        }
        
        int delrow[]={-1,0,1,0};
        int delcol[] {0,1,0,-1};
        
        while(!q.empty()){
            int row = q.front().first;
            int col = q.front().second;
            q.pop();
            
            for(int i=0;i<4;i++){
                int nrow = row + delrow[i];
                int ncol = col + delcol[i];
                
                if(nrow>=0 && nrow<n && ncol>=0 && ncol<m && !visited[nrow][ncol] && grid[nrow][ncol]==1){
                    visited[nrow][ncol] = 1;
                    q.push({nrow,ncol});
                }
            }
            
        }
        int count =0;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(!visited[i][j] && grid[i][j]==1){
                    count++;
                    //visited[i][j] = 1;
                }
                // if(!visited[i][j]){
                //     visited[i][j] =1;
                // }
            }
        }
        return count;
    }
};
