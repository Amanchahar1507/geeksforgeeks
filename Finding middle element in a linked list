link = https://practice.geeksforgeeks.org/problems/finding-middle-element-in-a-linked-list/1?page=1&category[]=Linked%20List&sortBy=submissions

class Solution{
    public:
    /* Should return data of middle node. If linked list is empty, then  -1*/
    int getMiddle(Node *head)
    {
        Node*temp = head;
        Node*slow = head;
        int count = 1;
        while(temp->next != NULL){
            count++;
            temp = temp->next;
        }
        
        if(count%2!=0){
             
             Node*fast = head->next;
            while(fast!=NULL && fast->next !=NULL){
              slow = slow->next;
              fast = fast->next;
              if(fast->next!=NULL){
                 fast = fast->next;
              }
            }
        }    
        else{
             
             Node*fast = head;
             while(fast!=NULL && fast->next !=NULL){
               slow = slow->next;
               fast = fast->next;
               if(fast->next!=NULL){
                  fast = fast->next;
               }
             }
        }
        return slow->data;
        // Your code here
    }
};
