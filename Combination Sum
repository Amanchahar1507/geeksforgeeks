 void d(vector<int>&arr , int sum , int index , vector<vector<int>>&ans , vector<int>&ds){
       if(index == arr.size())return;
       if(sum==0){
           ans.push_back(ds);
           return;
       }
   for(int i = index ; i<arr.size();i++){
       if(i>index && arr[i]==arr[i-1])continue;
       if(arr[i]>sum)break;
       ds.push_back(arr[i]);
       d(arr,sum-arr[i],i,ans,ds);
       ds.pop_back();
   }
      }
    //Function to return a list of indexes denoting the required 
    //combinations whose sum is equal to given number.
      vector<vector<int> > combinationSum(vector<int> &A, int B) {
       // Your code here
       sort(A.begin(),A.end());
       vector<int>ds;
       vector<vector<int>>ans;
       d(A,B,0,ans,ds);
       return ans;
       
   }
};
