link = https://practice.geeksforgeeks.org/problems/find-the-number-of-islands/1

class Solution {
  public:
    // Function to find the number of islands.
    
    void bfs(int row,int col,vector<vector<int>>&visited, vector<vector<char>>&grid){
        visited[row][col] = 1;
        
        queue<pair<int,int>>q;
        q.push({row ,col});
        
        int n = grid.size();
        int m = grid[0].size();
        
        while(!q.empty()){
            int row = q.front().first;
            int col = q.front().second;
            q.pop();
            
            
            //traverse in the neighbour and mark them its a land
            for(int delrow =-1;delrow<=1;delrow++){
                for(int delcol = -1;delcol<=1;delcol++){
                   int nerow = row+ delrow;
                   int necol = col+ delcol;
                
                   if(nerow>=0 && nerow<n && necol>=0 && necol<m &&
                   grid[nerow][necol] =='1' && !visited[nerow][necol]){
                       visited[nerow][necol]=1;
                       q.push({nerow,necol});
                   }
                }
            }
        }
    
        
    }
    
    int numIslands(vector<vector<char>>& grid) {
        int n = grid.size();
        int m = grid[0].size();
        
        vector<vector<int>>visited(n,vector<int>(m,0));
        
        int count =0;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(visited[i][j]==0 && grid[i][j]=='1'){
                    count++;
                    bfs(i,j,visited,grid);
                }
            }
        }
        return count;
    }
    };
